name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      tf_action:
        description: 'Terraform action (init, plan, apply, destroy)'
        required: true
        default: 'plan'
        type: choice
        options:
          - init
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Select environment directory
        id: select-env
        run: |
          echo "ENV_DIR=environments/${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "TFVARS_FILE=${{ github.event.inputs.environment }}.tfvars" >> $GITHUB_ENV

      - name: Terraform Init (always before plan/apply/destroy)
        if: ${{ github.event.inputs.tf_action != 'init' }}
        run: terraform -chdir=$ENV_DIR init

      - name: Terraform Init (manual)
        if: ${{ github.event.inputs.tf_action == 'init' }}
        run: terraform -chdir=$ENV_DIR init

      - name: Terraform Plan
        if: ${{ github.event.inputs.tf_action == 'plan' }}
        run: terraform -chdir=$ENV_DIR plan -var-file=${TFVARS_FILE}

      - name: Terraform Apply
        if: ${{ github.event.inputs.tf_action == 'apply' }}
        run: terraform -chdir=$ENV_DIR apply -auto-approve -var-file=${TFVARS_FILE}

      - name: Terraform Destroy
        if: ${{ github.event.inputs.tf_action == 'destroy' }}
        run: terraform -chdir=$ENV_DIR destroy -auto-approve -var-file=${TFVARS_FILE}

        